services:
  rosen-monitor:
    build:
      context: .
      args:
        DOCKER_GID: "${DOCKER_GID}"
    container_name: rosen-bridge-monitor
    
    cap_drop:
    - ALL
    
    cap_add:
    - SETGID
    - SETUID
    restart: always

    env_file:
      - .env
    environment:
      - MONITOR_PORT=${MONITOR_PORT:-8080}
      - UPDATE_INTERVAL=${UPDATE_INTERVAL:-30000}
      - TZ=${TZ:-UTC}
      - NODE_ENV=production

    ports:
      - "${HOST_IP:-127.0.0.1}:${HOST_PORT:-8080}:8080"

    read_only: true
    
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ./public:/app/public
      
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M

    labels:
      - "com.rosen-bridge.service=monitor"
      - "com.rosen-bridge.description=Rosen Bridge Infrastructure Monitor"

    networks:
      - rosen_network

networks:
  rosen_network:
    name: rosen_network
